{"version":3,"sources":["logo.svg","components/MyComponent.jsx","components/Index.jsx","actions/todoList.js","components/TodoList.jsx","components/BottomNav.jsx","components/MyForm.jsx","App.js","serviceWorker.js","reducers/todoList.js","reducers/index.js","index.js"],"names":["module","exports","MySpan","props","text","MyButton","slot","Button","variant","color","onClick","Index","render","Grid","container","spacing","item","md","xs","style","src","logo","className","alt","state","time","Date","getFullYear","getMonth","getDate","React","Component","addTodo","payload","type","removeTodo","id","TodoList","removeItem","event","handleChange","e","setState","task","target","value","addList","preventDefault","uuid","todoList","isShowError","TextField","label","onChange","FormHelperText","error","margin","List","map","index","ListItem","key","ListItemText","primary","styles","makeStyles","theme","paper","padding","textAlign","palette","secondary","whiteSpace","marginBottom","bind","connect","store","todo","actionCreators","BottomNav","setPath","newValue","path","initPath","BottomNavigation","this","showLabels","BottomNavigationAction","icon","component","Link","to","MyForm","handleInput","name","checkForm","account","showAccountError","password","showPasswordError","isLogin","Reset","loginForm","Card","CardContent","Typography","noValidate","autoComplete","onSubmit","FormControl","windowHeight","height","App","pathName","location","pathname","Container","maxWidth","exact","Boolean","window","hostname","match","action","data","filter","todoApp","combineReducers","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d04ac758.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport function MySpan(props) {\r\n  return <span>{props.text}</span>\r\n}\r\n\r\nexport function MyButton(props) {\r\n  const {slot} = props;\r\n  return <Button variant=\"contained\" color={props.color} onClick={props.onClick}>\r\n    {slot} {props.text}\r\n  </Button>\r\n}\r\n\r\nexport default MyButton;\r\n","import React from 'react';\r\nimport logo from \"../logo.svg\";\r\nimport '../App.css';\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MyButton from \"./MyComponent\";\r\nimport {MySpan} from \"./MyComponent\";\r\n\r\nclass Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {color: \"red\"};\r\n    let time = new Date();\r\n    this.state.time = '今天是' + time.getFullYear() + \"/\" + (time.getMonth() + 1) + \"/\" + time.getDate();\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n        <Grid container spacing={3}>\r\n          <Grid item md={12} xs={12} style={{'textAlign': 'center'}}>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n          </Grid>\r\n          <Grid item md={6} xs={12} className=\"center\">\r\n            <MyButton variant=\"contained\" color=\"primary\" text=\"hello\" slot={<HomeIcon/>}/>\r\n          </Grid>\r\n          <Grid item md={6} xs={12} className=\"center\">\r\n            <MyButton variant=\"contained\" color=\"secondary\" text=\"hi\" slot={<DeleteIcon/>}/>\r\n          </Grid>\r\n          <Grid item md={12} xs={12} className=\"center\">\r\n            {this.state.time}<MySpan text={'ba la ba ba ba'}/>\r\n          </Grid>\r\n        </Grid>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Index\r\n","//定義Action的資料型態\r\nexport const addTodo = (payload: { id: number, text: string }) => {\r\n  return {type: 'ADD_ITEM', payload};\r\n};\r\n\r\nexport const removeTodo = (id: string) => {\r\n  return {type: 'DEL_ITEM', id}\r\n};\r\n","import * as React from \"react\";\r\nimport MyButton from \"./MyComponent\";\r\nimport uuid from 'uuid/v4';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport List from \"@material-ui/core/List\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport '../App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from 'react-redux'\r\nimport * as actionCreators from '../actions/todoList'\r\n\r\nclass TodoList extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      task: '',\r\n      todoList: [],\r\n      isShowError: false,\r\n      styles:''\r\n    };\r\n\r\n    this.setState('styles', () => {\r\n      makeStyles(theme => ({\r\n        paper: {\r\n          padding: theme.spacing(1),\r\n          textAlign: 'center',\r\n          color: theme.palette.text.secondary,\r\n          whiteSpace: 'nowrap',\r\n          marginBottom: theme.spacing(1)\r\n        }\r\n    })\r\n      )\r\n  }\r\n  );\r\n    this.addList = this.addList.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.removeItem = this.removeItem.bind(this);\r\n  }\r\n\r\n  removeItem = (event, id) => {\r\n    this.props.removeTodo(id);\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      task: e.target.value\r\n    });\r\n  };\r\n\r\n  addList = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.task) {\r\n      const item = { text: this.state.task, id: uuid() };\r\n      this.setState({\r\n        todoList: [...this.state.todoList, item],\r\n        task: '',\r\n        isShowError: false\r\n      });\r\n      this.props.addTodo(item);\r\n    } else {\r\n      this.setState({\r\n        isShowError: true\r\n      });\r\n    }\r\n  };\r\n\r\n  render = () => {\r\n    const { todoList, removeTodo } = this.props;\r\n\r\n    return <Grid container spacing={3}>\r\n      <Grid item md={8} xs={12} className=\"center\">\r\n        <TextField label=\"代辦事項\" onChange={this.handleChange} value={this.state.task} />\r\n        {\r\n          this.state.isShowError ?\r\n            <FormHelperText error={true} margin={'dense'} variant={'outlined'}>請輸入待辦事項</FormHelperText> : null\r\n        }\r\n      </Grid>\r\n      <Grid item md={4} xs={12} className=\"center\">\r\n        <MyButton onClick={this.addList} color=\"primary\" text='Add' />\r\n      </Grid>\r\n      <Grid item md={12} xs={12} className=\"center\">\r\n        <List className='taskList'>\r\n          {\r\n            todoList.map((item, index) => {\r\n              return (\r\n                <ListItem key={item.id}>\r\n                  <ListItemText id={item.id} primary={item.text} />\r\n                  <Button variant=\"contained\" color={\"secondary\"} onClick={() => removeTodo(item.id)}>Delete</Button>\r\n                </ListItem>\r\n              )\r\n            })\r\n          }\r\n        </List>\r\n      </Grid>\r\n    </Grid>\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  return { todoList: store.todo };\r\n};\r\nexport default connect(mapStateToProps, actionCreators)(TodoList)\r\n","import React from \"react\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\r\n\r\nclass BottomNav extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    if (props.initPath) {\r\n      this.state = {path: props.initPath};\r\n    } else {\r\n      this.state = {path: '/'};\r\n    }\r\n    this.setPath = this.setPath.bind(this);\r\n  }\r\n\r\n  setPath = (event, newValue) => {\r\n    this.setState({\r\n      path: newValue\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <BottomNavigation\r\n            value={this.state.path}\r\n            onChange={this.setPath}\r\n            showLabels>\r\n          <BottomNavigationAction label=\"Home\" icon={<HomeIcon/>} value=\"/\" component={Link} to=\"/\"/>\r\n          <BottomNavigationAction label=\"ToDoList\" icon={<ListIcon/>} value=\"/todo\" component={Link} to=\"/todo\"/>\r\n          <BottomNavigationAction label=\"MyForm\" icon={\r\n            <ContactMailIcon/>} value=\"/myForm\" component={Link} to=\"/myForm\"/>\r\n        </BottomNavigation>\r\n    );\r\n  }\r\n}\r\n\r\nBottomNav.propTypes = {\r\n  initPath: PropTypes.string\r\n};\r\n\r\nexport default BottomNav\r\n","import * as React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport '../App.css';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass MyForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n      showAccountError: false,\r\n      showPasswordError: false,\r\n      isLogin: false\r\n    };\r\n    this.checkForm = this.checkForm.bind(this);\r\n    this.handleInput = this.handleInput.bind(this);\r\n  }\r\n\r\n  handleInput = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  };\r\n\r\n  checkForm = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.account === '') {\r\n      this.setState({showAccountError: true});\r\n      return false;\r\n    } else {\r\n      this.setState({showAccountError: false});\r\n    }\r\n    if (this.state.password === '') {\r\n      this.setState({showPasswordError: true});\r\n      return false;\r\n    } else {\r\n      this.setState({showPasswordError: false});\r\n    }\r\n    this.setState({isLogin: true});\r\n  };\r\n\r\n  Reset = (e) => {\r\n    this.setState({\r\n      account: '',\r\n      password: '',\r\n      showAccountError: false,\r\n      showPasswordError: false\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    let loginForm = null;\r\n    if (this.state.isLogin) {\r\n      loginForm = <Card variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h2\">Welcome {this.state.account}</Typography>\r\n        </CardContent>\r\n      </Card>\r\n    } else {\r\n      loginForm = <Grid item md={7}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={this.checkForm}>\r\n          <Grid item md={12}>\r\n            <FormControl>\r\n              <TextField variant=\"outlined\" name=\"account\" label={\"Name\"} onChange={this.handleInput} value={this.state.account}/>\r\n            </FormControl>\r\n            {this.state.showAccountError ?\r\n                <FormHelperText error={true} margin={'dense'} variant={'outlined'}>Your account</FormHelperText> : null}\r\n          </Grid>\r\n          <Grid item md={12}>&nbsp;</Grid>\r\n          <Grid item md={12}>\r\n            <FormControl>\r\n              <TextField type=\"password\" name=\"password\" label=\"Password\" variant=\"outlined\" onChange={this.handleInput} value={this.state.password}/>\r\n            </FormControl>\r\n            {this.state.showPasswordError ? <FormHelperText error={'true'} margin={'dense'} variant={'outlined'}>Your\r\n              password</FormHelperText> : null}\r\n          </Grid>\r\n          <Grid style={{'marginLeft': '145px', 'marginTop': '20px'}}>\r\n            <Button color=\"primary\" type={'submit'} variant=\"contained\">登入</Button>&nbsp;\r\n            <Button color=\"secondary\" onClick={this.Reset} variant=\"contained\">Reset</Button>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    }\r\n\r\n    return <Grid container>\r\n      <Grid item md={12}/>\r\n      <Grid item md={5}/>\r\n      {loginForm}\r\n    </Grid>\r\n  };\r\n}\r\n\r\nexport default MyForm;\r\n","import React from 'react';\r\nimport Index from './components/Index.jsx';\r\nimport './App.css';\r\nimport 'typeface-roboto';\r\nimport TodoList from \"./components/TodoList\";\r\nimport {Route} from \"react-router-dom\";\r\nimport BottomNav from \"./components/BottomNav\";\r\nimport MyForm from \"./components/MyForm\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst windowHeight = {\r\n  height: '90vh'\r\n};\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pathName: (this.props.location)?this.props.location.pathname:'/'\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return <Container component=\"main\" maxWidth=\"lg\">\r\n      <Container style={windowHeight}>\r\n        <Route path=\"/\" exact component={(props) => <Index {...props}/>}/>\r\n        <Route path=\"/todo\" component={(props) => <TodoList {...props}/>}/>\r\n        <Route path={\"/myForm\"} component={(props) => <MyForm {...props}/>}/>\r\n      </Container>\r\n      <BottomNav initPath={this.state.pathName}/>\r\n    </Container>\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//定義可以觸發的action type與動作\r\nconst todoList = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM':\r\n      let data = action.payload;\r\n      return [\r\n        {\r\n          id: data.id,\r\n          text: data.text\r\n        }, ...state\r\n      ];\r\n    case 'DEL_ITEM': {\r\n      return state.filter(item => item.id !== action.id)\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default todoList\r\n","import {combineReducers} from 'redux'\r\nimport todoList from './todoList'\r\n//合併所有的reducers\r\nconst todoApp = combineReducers({\r\n  todo: todoList\r\n});\r\n\r\nexport default todoApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Switch} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport todoApp from './reducers'\n\n\nconst windowHeight = {\n  height: '80vh'\n};\nlet store = createStore(todoApp);\n\nReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter style={windowHeight}>\n        <Switch>\n          <App/>\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}