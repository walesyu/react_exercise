{"version":3,"sources":["logo.svg","components/MyComponent.jsx","components/Index.jsx","actions/todoList.js","components/TodoList.jsx","components/BottomNav.jsx","actions/login.js","components/MyForm.jsx","App.js","serviceWorker.js","reducers/todoList.js","reducers/login.js","reducers/index.js","index.js"],"names":["module","exports","MySpan","props","text","MyButton","slot","Button","variant","color","onClick","Index","render","Grid","container","spacing","item","md","xs","style","src","logo","className","alt","state","time","Date","getFullYear","getMonth","getDate","React","Component","addTodo","payload","type","removeTodo","id","TodoList","removeItem","event","handleChange","e","setState","task","target","value","addList","preventDefault","uuid","isShowError","todoList","noValidate","autoComplete","FormControl","TextField","label","onChange","FormHelperText","error","margin","List","map","index","ListItem","key","ListItemText","primary","bind","connect","store","todo","actionCreators","BottomNav","setPath","newValue","path","initPath","BottomNavigation","this","showLabels","BottomNavigationAction","icon","component","Link","to","login","logout","MyForm","handleInput","name","checkForm","account","showAccountError","password","showPasswordError","isLogin","Reset","loginForm","Card","CardContent","Typography","onSubmit","loginInfo","user","windowHeight","height","App","pathName","location","pathname","Container","maxWidth","exact","Boolean","window","hostname","match","action","data","filter","role","todoApp","combineReducers","createStore","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yHAAAA,EAAOC,QAAU,IAA0B,kC,icCGpC,SAASC,EAAOC,GACrB,OAAO,4BAAOA,EAAMC,MAUPC,MAPf,SAAkBF,GAAQ,IACjBG,EAAQH,EAARG,KACP,OAAO,gBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAON,EAAMM,MAAOC,QAASP,EAAMO,SACnEJ,EADI,IACGH,EAAMC,OC2BHO,E,YA3Bb,WAAYR,GAAQ,IAAD,uBACjB,4CAAMA,KAMRS,OAAS,WACP,OACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,MAAO,CAAC,UAAa,WAC9C,yBAAKC,IAAKC,IAAMC,UAAU,WAAWC,IAAI,UAE3C,kBAACV,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAII,UAAU,UAClC,kBAAC,EAAD,CAAUd,QAAQ,YAAYC,MAAM,UAAUL,KAAK,QAAQE,KAAM,kBAAC,IAAD,SAEnE,kBAACO,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAII,UAAU,UAClC,kBAAC,EAAD,CAAUd,QAAQ,YAAYC,MAAM,YAAYL,KAAK,KAAKE,KAAM,kBAAC,IAAD,SAElE,kBAACO,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAII,UAAU,UAClC,EAAKE,MAAMC,KAAK,kBAACvB,EAAD,CAAQE,KAAM,mBADjC,kBAjBN,EAAKoB,MAAQ,CAACf,MAAO,OACrB,IAAIgB,EAAO,IAAIC,KAHE,OAIjB,EAAKF,MAAMC,KAAO,qBAAQA,EAAKE,cAAgB,KAAOF,EAAKG,WAAa,GAAK,IAAMH,EAAKI,UAJvE,E,2BADDC,IAAMC,W,+FCRbC,EAAU,SAACC,GACtB,MAAO,CAACC,KAAM,WAAYD,YAGfE,EAAa,SAACC,GACzB,MAAO,CAACF,KAAM,WAAYE,OCStBC,E,YAEJ,WAAYlC,GAAQ,IAAD,8BACjB,4CAAMA,KAURmC,WAAa,SAACC,EAAOH,GACnB,EAAKjC,MAAMgC,WAAWC,IAZL,EAenBI,aAAe,SAACC,GACd,EAAKC,SAAS,CACZC,KAAMF,EAAEG,OAAOC,SAjBA,EAqBnBC,QAAU,SAACL,GAET,GADAA,EAAEM,iBACE,EAAKvB,MAAMmB,KAAM,CACnB,IAAM3B,EAAO,CAACZ,KAAM,EAAKoB,MAAMmB,KAAMP,GAAIY,OACzC,EAAKN,SAAS,CACZC,KAAM,GACNM,aAAa,IAEf,EAAK9C,MAAM6B,QAAQhB,QAEnB,EAAK0B,SAAS,CACZO,aAAa,KAhCA,EAqCnBrC,OAAS,WAAO,IAAD,EACkB,EAAKT,MAA7B+C,EADM,EACNA,SAAUf,EADJ,EACIA,WAEjB,OAAO,gBAACtB,EAAA,EAAD,CAAMC,WAAS,GACpB,gBAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,KACf,gBAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACf,gBAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,wBAAMkC,YAAU,EAACC,aAAa,OAC5B,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAWC,MAAM,2BAAOC,SAAU,EAAKhB,aAAcK,MAAO,EAAKrB,MAAMmB,OAErE,EAAKnB,MAAMyB,YACP,gBAACQ,EAAA,EAAD,CAAgBC,OAAO,EAAMC,OAAQ,QAASnD,QAAS,YAAvD,8CAA8F,MAGtG,gBAAC,EAAD,CAAUE,QAAS,EAAKoC,QAASrC,MAAM,UAAUL,KAAK,UAG1D,gBAACS,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACf,gBAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,gBAAC2C,EAAA,EAAD,CAAMtC,UAAU,YAEZ4B,EAASW,KAAI,SAAC7C,EAAM8C,GAClB,OACI,gBAACC,EAAA,EAAD,CAAUC,IAAKhD,EAAKoB,IAClB,gBAAC6B,EAAA,EAAD,CAAc7B,GAAIpB,EAAKoB,GAAI8B,QAASlD,EAAKZ,OACzC,gBAACG,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAO,YAAaC,QAAS,kBAAMyB,EAAWnB,EAAKoB,MAA/E,kBA7DhB,EAAKZ,MAAQ,CACXmB,KAAM,GACNM,aAAa,GAEf,EAAKH,QAAU,EAAKA,QAAQqB,KAAb,gBACf,EAAK3B,aAAe,EAAKA,aAAa2B,KAAlB,gBACpB,EAAK7B,WAAa,EAAKA,WAAW6B,KAAhB,gBARD,E,2BAFErC,aA+ERsC,eAHS,SAACC,GACvB,MAAO,CAACnB,SAAUmB,EAAMC,QAEcC,EAAzBH,CAAyC/B,G,oEChDzCmC,E,YAnCb,WAAYrE,GAAQ,IAAD,8BACjB,4CAAMA,KASRsE,QAAU,SAAClC,EAAOmC,GAChB,EAAKhC,SAAS,CACZiC,KAAMD,KAVJvE,EAAMyE,SACR,EAAKpD,MAAQ,CAACmD,KAAMxE,EAAMyE,UAE1B,EAAKpD,MAAQ,CAACmD,KAAM,KAEtB,EAAKF,QAAU,EAAKA,QAAQN,KAAb,gBAPE,E,sEAiBjB,OACI,kBAACU,EAAA,EAAD,CACIhC,MAAOiC,KAAKtD,MAAMmD,KAClBnB,SAAUsB,KAAKL,QACfM,YAAU,GACZ,kBAACC,EAAA,EAAD,CAAwBzB,MAAM,OAAO0B,KAAM,kBAAC,IAAD,MAAapC,MAAM,IAAIqC,UAAWC,IAAMC,GAAG,MACtF,kBAACJ,EAAA,EAAD,CAAwBzB,MAAM,WAAW0B,KAAM,kBAAC,IAAD,MAAapC,MAAM,QAAQqC,UAAWC,IAAMC,GAAG,UAC9F,kBAACJ,EAAA,EAAD,CAAwBzB,MAAM,SAAS0B,KACrC,kBAAC,IAAD,MAAoBpC,MAAM,UAAUqC,UAAWC,IAAMC,GAAG,gB,GA3B5CtD,IAAMC,W,kCCRjBsD,EAAQ,SAACpD,GACpB,MAAO,CAACC,KAAM,QAASD,YAGZqD,EAAS,WACpB,MAAO,CAACpD,KAAM,WCOVqD,G,YACJ,WAAYpF,GAAQ,IAAD,8BACjB,4CAAMA,KAYRqF,YAAc,SAACjD,GACb,IACMkD,EADSlD,EAAMK,OACD6C,KACpB,EAAK/C,SAAL,eACG+C,EAAOlD,EAAMK,OAAOC,SAjBN,EAqBnB6C,UAAY,SAACjD,GAEX,OADAA,EAAEM,iBACyB,KAAvB,EAAKvB,MAAMmE,SACb,EAAKjD,SAAS,CAACkD,kBAAkB,KAC1B,IAEP,EAAKlD,SAAS,CAACkD,kBAAkB,IAEP,KAAxB,EAAKpE,MAAMqE,UACb,EAAKnD,SAAS,CAACoD,mBAAmB,KAC3B,IAEP,EAAKpD,SAAS,CAACoD,mBAAmB,IAEpC,EAAKpD,SAAS,CAACqD,SAAS,SACxB,EAAK5F,MAAMkF,MAAM,EAAK7D,MAAMmE,YApCX,EAuCnBK,MAAQ,SAACvD,GACP,EAAKC,SAAS,CACZiD,QAAS,GACTE,SAAU,GACVD,kBAAkB,EAClBE,mBAAmB,KA5CJ,EAgDnBlF,OAAS,WACP,IAAIqF,EAAY,KAiChB,OA/BEA,EADE,EAAKzE,MAAMuE,QACD,gBAACG,EAAA,EAAD,CAAM1F,QAAQ,YACxB,gBAAC2F,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAY5F,QAAQ,KAAK0E,UAAU,MAAnC,WAAiD,EAAK1D,MAAMmE,WAIpD,gBAAC9E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACzB,wBAAMkC,YAAU,EAACC,aAAa,MAAMiD,SAAU,EAAKX,WACjD,gBAAC7E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,gBAACoC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAW9C,QAAQ,WAAWiF,KAAK,UAAUlC,MAAO,OAAQC,SAAU,EAAKgC,YAAa3C,MAAO,EAAKrB,MAAMmE,WAE3G,EAAKnE,MAAMoE,iBACR,gBAACnC,EAAA,EAAD,CAAgBC,OAAO,EAAMC,OAAQ,QAASnD,QAAS,YAAvD,gBAAmG,MAEzG,gBAACK,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAAf,QACA,gBAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,gBAACoC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAWpB,KAAK,WAAWuD,KAAK,WAAWlC,MAAM,WAAW/C,QAAQ,WAAWgD,SAAU,EAAKgC,YAAa3C,MAAO,EAAKrB,MAAMqE,YAE9H,EAAKrE,MAAMsE,kBAAoB,gBAACrC,EAAA,EAAD,CAAgBC,MAAO,OAAQC,OAAQ,QAASnD,QAAS,YAAzD,iBACF,MAEhC,gBAACK,EAAA,EAAD,CAAMM,MAAO,CAAC,WAAc,QAAS,UAAa,SAChD,gBAACZ,EAAA,EAAD,CAAQE,MAAM,UAAUyB,KAAM,SAAU1B,QAAQ,aAAhD,gBADF,OAEE,gBAACD,EAAA,EAAD,CAAQE,MAAM,YAAYC,QAAS,EAAKsF,MAAOxF,QAAQ,aAAvD,mBAMD,gBAACK,EAAA,EAAD,CAAMC,WAAS,GACpB,gBAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,KACf,gBAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACdgF,IAnFH,EAAKzE,MAAQ,CACXmE,QAAUxF,EAAMwF,QAAWxF,EAAMwF,QAAU,GAC3CE,SAAU,GACVD,kBAAkB,EAClBE,mBAAmB,EACnBC,UAAU5F,EAAM4F,SAAW5F,EAAM4F,SAEnC,EAAKL,UAAY,EAAKA,UAAUvB,KAAf,gBACjB,EAAKqB,YAAc,EAAKA,YAAYrB,KAAjB,gBAVF,E,2BADArC,aAiGNsC,gBANS,SAACC,GACvB,MAAO,CACLsB,QAAUtB,EAAMiC,UAAUC,KAAQlC,EAAMiC,UAAUC,KAAKd,KAAO,GAC9DM,UAAY1B,EAAMiC,UAAUC,QAGQhC,EAAzBH,CAAyCmB,I,UCpGlDiB,GAAe,CACnBC,OAAQ,QAuBKC,G,YAnBb,WAAYvG,GAAQ,IAAD,8BACjB,4CAAMA,KACDqB,MAAQ,CACXmF,SAAW,EAAKxG,MAAMyG,SAAY,EAAKzG,MAAMyG,SAASC,SAAW,KAHlD,E,sEAQjB,OAAO,kBAACC,GAAA,EAAD,CAAW5B,UAAU,OAAO6B,SAAS,MAC1C,kBAACD,GAAA,EAAD,CAAW3F,MAAOqF,IAChB,kBAAC,IAAD,CAAO7B,KAAM,IAAKqC,OAAK,EAAC9B,UAAW,SAAC/E,GAAD,OAAW,kBAAC,EAAUA,MACzD,kBAAC,IAAD,CAAOwE,KAAM,QAASO,UAAW,SAAC/E,GAAD,OAAW,kBAAC,EAAaA,MAC1D,kBAAC,IAAD,CAAOwE,KAAM,UAAWO,UAAW,SAAC/E,GAAD,OAAW,kBAAC,GAAWA,OAE5D,kBAAC,EAAD,CAAWyE,SAAUE,KAAKtD,MAAMmF,gB,GAfpB7E,IAAMC,WCFJkF,QACW,cAA7BC,OAAON,SAASO,UAEe,UAA7BD,OAAON,SAASO,UAEhBD,OAAON,SAASO,SAASC,MACvB,2D,sBCCSlE,GAlBE,WAAyB,IAAxB1B,EAAuB,uDAAf,GAAI6F,EAAW,uCACvC,OAAQA,EAAOnF,MACb,IAAK,WACH,IAAIoF,EAAOD,EAAOpF,QAClB,MAAM,CACJ,CACEG,GAAIkF,EAAKlF,GACThC,KAAMkH,EAAKlH,OAHf,oBAIQoB,IAEV,IAAK,WACH,OAAOA,EAAM+F,QAAO,SAAAvG,GAAI,OAAIA,EAAKoB,KAAOiF,EAAOjF,MAEjD,QACE,OAAOZ,ICIE6D,GAlBD,WAAyB,IAAxB7D,EAAuB,uDAAf,GAAI6F,EAAW,uCACpC,OAAQA,EAAOnF,MACb,IAAK,QACH,IAAIoF,EAAOD,EAAOpF,QAClB,MAAO,CACLsE,KAAM,CACJd,KAAM6B,EACNE,KAAM,UAGZ,IAAK,SACH,OAAO,KAET,QACE,OAAOhG,ICNEiG,GALCC,aAAgB,CAC9BpB,UAAWjB,GACXf,KAAMpB,KCQJmB,GAAQsD,aAAYF,IAExBG,IAAShH,OACL,kBAAC,IAAD,CAAUyD,MAAOA,IACf,kBAAC,IAAD,CAAewD,SAAS,kBAAkB1G,MAP3B,CACnBsF,OAAQ,SAOF,kBAAC,IAAD,KACE,kBAAC,GAAD,SAIJqB,SAASC,eAAe,SJ2GxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ae874030.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nexport function MySpan(props) {\n  return <span>{props.text}</span>\n}\n\nfunction MyButton(props) {\n  const {slot} = props;\n  return <Button variant=\"contained\" color={props.color} onClick={props.onClick}>\n    {slot} {props.text}\n  </Button>\n}\n\nexport default MyButton;\n","import React from 'react';\nimport logo from \"../logo.svg\";\nimport '../App.css';\nimport HomeIcon from '@material-ui/icons/Home'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Grid from '@material-ui/core/Grid'\nimport MyButton from \"./MyComponent\";\nimport {MySpan} from \"./MyComponent\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {color: \"red\"};\n    let time = new Date();\n    this.state.time = '今天是' + time.getFullYear() + \"/\" + (time.getMonth() + 1) + \"/\" + time.getDate();\n  }\n\n  render = () => {\n    return (\n        <Grid container spacing={3}>\n          <Grid item md={12} xs={12} style={{'textAlign': 'center'}}>\n            <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n          </Grid>\n          <Grid item md={6} xs={12} className=\"center\">\n            <MyButton variant=\"contained\" color=\"primary\" text=\"hello\" slot={<HomeIcon/>}/>\n          </Grid>\n          <Grid item md={6} xs={12} className=\"center\">\n            <MyButton variant=\"contained\" color=\"secondary\" text=\"hi\" slot={<DeleteIcon/>}/>\n          </Grid>\n          <Grid item md={12} xs={12} className=\"center\">\n            {this.state.time}<MySpan text={'ba la ba ba ba'}/> Version 0.2\n          </Grid>\n        </Grid>\n    );\n  };\n}\n\nexport default Index\n","//定義Action的資料型態\nexport const addTodo = (payload: { id: number, text: string }) => {\n  return {type: 'ADD_ITEM', payload};\n};\n\nexport const removeTodo = (id: string) => {\n  return {type: 'DEL_ITEM', id}\n};\n","import * as React from \"react\";\nimport MyButton from \"./MyComponent\";\nimport uuid from 'uuid/v4';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport '../App.css';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport {connect} from 'react-redux'\nimport * as actionCreators from '../actions/todoList'\n\nclass TodoList extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: '',\n      isShowError: false\n    };\n    this.addList = this.addList.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n  }\n\n  removeItem = (event, id) => {\n    this.props.removeTodo(id);\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      task: e.target.value\n    });\n  };\n\n  addList = (e) => {\n    e.preventDefault();\n    if (this.state.task) {\n      const item = {text: this.state.task, id: uuid()};\n      this.setState({\n        task: '',\n        isShowError: false\n      });\n      this.props.addTodo(item);\n    } else {\n      this.setState({\n        isShowError: true\n      });\n    }\n  };\n\n  render = () => {\n    const {todoList, removeTodo} = this.props;\n\n    return <Grid container>\n      <Grid item md={12}/>\n      <Grid item md={5}/>\n      <Grid item md={7}>\n        <form noValidate autoComplete=\"off\">\n          <FormControl>\n            <TextField label=\"代辦事項\" onChange={this.handleChange} value={this.state.task}/>\n            {\n              this.state.isShowError ?\n                  <FormHelperText error={true} margin={'dense'} variant={'outlined'}>請輸入待辦事項</FormHelperText> : null\n            }\n          </FormControl>\n          <MyButton onClick={this.addList} color=\"primary\" text='Add'/>\n        </form>\n      </Grid>\n      <Grid item md={5}/>\n      <Grid item md={7}>\n        <List className='taskList'>\n          {\n            todoList.map((item, index) => {\n              return (\n                  <ListItem key={item.id}>\n                    <ListItemText id={item.id} primary={item.text}/>\n                    <Button variant=\"contained\" color={\"secondary\"} onClick={() => removeTodo(item.id)}>Delete</Button>\n                  </ListItem>\n              )\n            })\n          }\n        </List>\n      </Grid>\n    </Grid>\n  };\n}\n\nconst mapStateToProps = (store) => {\n  return {todoList: store.todo};\n};\nexport default connect(mapStateToProps, actionCreators)(TodoList)\n","import React from \"react\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport {Link} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\n\nclass BottomNav extends React.Component {\n\n  constructor(props) {\n    super(props);\n    if (props.initPath) {\n      this.state = {path: props.initPath};\n    } else {\n      this.state = {path: '/'};\n    }\n    this.setPath = this.setPath.bind(this);\n  }\n\n  setPath = (event, newValue) => {\n    this.setState({\n      path: newValue\n    });\n  };\n\n  render() {\n    return (\n        <BottomNavigation\n            value={this.state.path}\n            onChange={this.setPath}\n            showLabels>\n          <BottomNavigationAction label=\"Home\" icon={<HomeIcon/>} value=\"/\" component={Link} to=\"/\"/>\n          <BottomNavigationAction label=\"ToDoList\" icon={<ListIcon/>} value=\"/todo\" component={Link} to=\"/todo\"/>\n          <BottomNavigationAction label=\"MyForm\" icon={\n            <ContactMailIcon/>} value=\"/myForm\" component={Link} to=\"myForm\"/>\n        </BottomNavigation>\n    );\n  }\n}\n\nBottomNav.propTypes = {\n  initPath: PropTypes.string\n};\n\nexport default BottomNav\n","//定義Action的資料型態\nexport const login = (payload: { text: string }) => {\n  return {type: 'LOGIN', payload};\n};\n\nexport const logout = () => {\n  return {type: 'LOGOUT'}\n};\n","import * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport '../App.css';\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {connect} from \"react-redux\";\nimport * as actionCreators from \"../actions/login\";\n\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: (props.account) ? props.account : \"\",\n      password: '',\n      showAccountError: false,\n      showPasswordError: false,\n      isLogin: (props.isLogin) ? props.isLogin : false,\n    };\n    this.checkForm = this.checkForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput = (event) => {\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n\n  checkForm = (e) => {\n    e.preventDefault();\n    if (this.state.account === '') {\n      this.setState({showAccountError: true});\n      return false;\n    } else {\n      this.setState({showAccountError: false});\n    }\n    if (this.state.password === '') {\n      this.setState({showPasswordError: true});\n      return false;\n    } else {\n      this.setState({showPasswordError: false});\n    }\n    this.setState({isLogin: true});\n    this.props.login(this.state.account);\n  };\n\n  Reset = (e) => {\n    this.setState({\n      account: '',\n      password: '',\n      showAccountError: false,\n      showPasswordError: false\n    });\n  };\n\n  render = () => {\n    let loginForm = null;\n    if (this.state.isLogin) {\n      loginForm = <Card variant=\"outlined\">\n        <CardContent>\n          <Typography variant=\"h5\" component=\"h2\">Welcome {this.state.account}</Typography>\n        </CardContent>\n      </Card>\n    } else {\n      loginForm = <Grid item md={7}>\n        <form noValidate autoComplete=\"off\" onSubmit={this.checkForm}>\n          <Grid item md={12}>\n            <FormControl>\n              <TextField variant=\"outlined\" name=\"account\" label={\"Name\"} onChange={this.handleInput} value={this.state.account}/>\n            </FormControl>\n            {this.state.showAccountError ?\n                <FormHelperText error={true} margin={'dense'} variant={'outlined'}>Your account</FormHelperText> : null}\n          </Grid>\n          <Grid item md={12}>&nbsp;</Grid>\n          <Grid item md={12}>\n            <FormControl>\n              <TextField type=\"password\" name=\"password\" label=\"Password\" variant=\"outlined\" onChange={this.handleInput} value={this.state.password}/>\n            </FormControl>\n            {this.state.showPasswordError ? <FormHelperText error={'true'} margin={'dense'} variant={'outlined'}>Your\n              password</FormHelperText> : null}\n          </Grid>\n          <Grid style={{'marginLeft': '145px', 'marginTop': '20px'}}>\n            <Button color=\"primary\" type={'submit'} variant=\"contained\">登入</Button>&nbsp;\n            <Button color=\"secondary\" onClick={this.Reset} variant=\"contained\">重設</Button>\n          </Grid>\n        </form>\n      </Grid>\n    }\n\n    return <Grid container>\n      <Grid item md={12}/>\n      <Grid item md={5}/>\n      {loginForm}\n    </Grid>\n  };\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    account: (store.loginInfo.user) ? store.loginInfo.user.name : '',\n    isLogin: !!(store.loginInfo.user)\n  };\n};\nexport default connect(mapStateToProps, actionCreators)(MyForm)\n","import React from 'react';\nimport Index from './components/Index.jsx';\nimport './App.css';\nimport 'typeface-roboto';\nimport TodoList from \"./components/TodoList\";\nimport {Route} from \"react-router-dom\";\nimport BottomNav from \"./components/BottomNav\";\nimport MyForm from \"./components/MyForm\";\nimport Container from \"@material-ui/core/Container\";\n\nconst windowHeight = {\n  height: '90vh'\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pathName: (this.props.location) ? this.props.location.pathname : '/'\n    };\n  }\n\n  render() {\n    return <Container component=\"main\" maxWidth=\"lg\">\n      <Container style={windowHeight}>\n        <Route path={\"/\"} exact component={(props) => <Index {...props}/>}/>\n        <Route path={\"/todo\"} component={(props) => <TodoList {...props}/>}/>\n        <Route path={\"/myForm\"} component={(props) => <MyForm {...props}/>}/>\n      </Container>\n      <BottomNav initPath={this.state.pathName}/>\n    </Container>\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//定義可以觸發的action type與動作\nconst todoList = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      let data = action.payload;\n      return [\n        {\n          id: data.id,\n          text: data.text\n        }, ...state\n      ];\n    case 'DEL_ITEM': {\n      return state.filter(item => item.id !== action.id)\n    }\n    default:\n      return state\n  }\n};\n\nexport default todoList\n","//定義可以觸發的action type與動作\nconst login = (state = [], action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      let data = action.payload;\n      return {\n        user: {\n          name: data,\n          role: 'Admin'\n        }\n      };\n    case 'LOGOUT': {\n      return null\n    }\n    default:\n      return state\n  }\n};\n\nexport default login\n","import {combineReducers} from 'redux'\nimport todoList from './todoList'\nimport login from './login'\n//合併所有的reducers\nconst todoApp = combineReducers({\n  loginInfo: login,\n  todo: todoList\n});\n\nexport default todoApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Switch} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport todoApp from './reducers'\n\n\nconst windowHeight = {\n  height: '80vh'\n};\nlet store = createStore(todoApp);\n\nReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter basename=\"/react_exercise\" style={windowHeight}>\n        <Switch>\n          <App/>\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}